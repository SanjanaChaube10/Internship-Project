# Register your models here.
# events/admin.py
from django.contrib import admin
from .models import Event, Sponsor, EventSponsor
from .models import EventSponsor


# ----- Inlines -----
class EventSponsorInline(admin.TabularInline):
    model = EventSponsor
    extra = 1
    fk_name = "event"            # this inline will appear on Event admin
    autocomplete_fields = ("sponsor",)
    fields = ("sponsor", "amount", "notes")
    verbose_name = "Sponsor link"
    verbose_name_plural = "Sponsor links"


class SponsorEventInline(admin.TabularInline):
    model = EventSponsor
    extra = 1
    fk_name = "sponsor"          # this inline will appear on Sponsor admin
    autocomplete_fields = ("event",)
    fields = ("event", "amount", "notes")
    verbose_name = "Event link"
    verbose_name_plural = "Event links"


# ----- Admins -----
@admin.register(Event)
class EventAdmin(admin.ModelAdmin):
    list_display = ("event_id", "title", "college", "date_time", "location", "created_by")
    list_filter = ("college", "date_time")
    search_fields = ("event_id", "title", "college__name", "location")
    readonly_fields = ("event_id",)   # generated by default
    inlines = [EventSponsorInline]
    # If you’ve added search_fields in College/AdminProfile admin, you can enable:
    # autocomplete_fields = ("college", "created_by")


@admin.register(Sponsor)
class SponsorAdmin(admin.ModelAdmin):
    list_display = ("sponsor_id", "sponsor_name", "email", "phone")
    search_fields = ("sponsor_id", "sponsor_name", "email", "phone")
    readonly_fields = ("sponsor_id",)  # generated by default
    inlines = [SponsorEventInline]



from .models import EventSponsor

@admin.register(EventSponsor)
class EventSponsorAdmin(admin.ModelAdmin):
    list_display = ("event_display", "sponsor_display", "amount", "notes")
    list_filter = ("event", "sponsor")
    search_fields = (
        "event__event_id",
        "event__title",
        "sponsor__sponsor_id",
        "sponsor__sponsor_name",
    )

    @admin.display(description="Event")
    def event_display(self, obj: EventSponsor) -> str:
        return f"{obj.event.event_id} — {obj.event.title}"

    @admin.display(description="Sponsor")
    def sponsor_display(self, obj: EventSponsor) -> str:
        return f"{obj.sponsor.sponsor_id} — {obj.sponsor.sponsor_name}"



